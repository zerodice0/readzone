# ReadZone Docker Compose - Development Environment
version: '3.8'

services:
  # Next.js Application
  readzone-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: readzone-app-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/data/dev.db
      - NEXTAUTH_SECRET=development-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      # Mount database directory for persistence
      - readzone-data:/app/data
      # Mount logs for development
      - readzone-logs:/app/logs
    networks:
      - readzone-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: readzone-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - readzone-redis-data:/data
    networks:
      - readzone-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Database management (optional - for SQLite file management)
  db-manager:
    image: node:18-alpine
    container_name: readzone-db-manager
    working_dir: /app
    volumes:
      - readzone-data:/app/data
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./node_modules/@prisma:/app/node_modules/@prisma
    networks:
      - readzone-network
    profiles:
      - tools
    command: ["sh", "-c", "npx prisma studio --browser none --port 5555"]
    ports:
      - "5555:5555"

# Volumes for data persistence
volumes:
  readzone-data:
    driver: local
  readzone-logs:
    driver: local
  readzone-redis-data:
    driver: local

# Networks
networks:
  readzone-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16